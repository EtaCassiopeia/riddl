domain ignore1 is {
  context ignore2 is {
    type Something = command {}
    type UndoSomething = command {}
    type AnotherThing = command {}
    type UndoAnotherThing = command {}
    entity blah is { ??? }
    saga name is {
      options(parallel)
      requires: { p1: String, p2: String }
      yields: String
      action Step1 for entity blah is {
        command Something reverted by command undoSomething as {
          example A is {
            then "Pass p1 to blah via Something command"
          }
        }
      }
      action Step2 for entity blah is {
        command AnotherThing reverted by command undoAnotherThing as {
          example B is {
            given "Step A has completed"
            then "Pass p2 to blah via AnotherThing command"
            and "Return AnotherThing's output"
          }
        }
      }
    }
  } described as "ignore"
} described as "just for testing a saga"
