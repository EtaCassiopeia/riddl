// #everything
// #domains
domain ReactiveBBQ {
// #domains

  // Create some types with better names than just "Id"
  type CustomerId = Id
  type OrderId = Id

  // #Kitchen
  // The Kitchen context pertains to
  context Kitchen {
    type OrderViewType = combine {
                           address: type IPAddress
                         }
    entity OrderView = OrderViewType
  }
  // #Kitchen

  // #Loyalty
  context Loyalty {
    type AccrualEvent = combine {
      when: TimeStamp,
      who: type CustomerId,
      pointsAccrued: Number,
      fromOrder: type OrderId
    }
    type AwardEvent = combine {
      when: TimeStamp,
      who: type CustomerId,
      pointsAwarded: Number,
      toOrder: type OrderId
    }
    type RewardEvent = choose AccrualEvent or AwardEvent
    type RewardsAccountType = combine {
                                    id: type CustomerId,
                                    points: Number,
                                    events: type RewardEvent*
                                  }
    entity RewardsAccount = RewardsAccountType
  }
  // #Loyalty

  // #Order
  context Order {
    type OrderType = combine {
                           orderId: Id,
                           customerId: Id
                         }
    aggregate entity Order = OrderType
  }
  // #Order

  // #Payment
  context Payment {
    type PaymentType = combine {
                             orderId: Id,
                             amount: Number,
                             cardToken: String
                           }
    aggregate entity Payment = PaymentType
  }
  // #Payment

  // #Menu
  context Menu {
    entity MenuItem =  String
    aggregate entity Menu = type MenuItem+
  }
  // #Menu

  // #Reservation
  context Reservation {
    type ReservationType = combine {
                                 partyName: String,
                                 phoneNumber: String,
                                 location: Id,
                                 time: Time,
                                 date: Date
                               }
    aggregate entity Reservation = ReservationType consumes channel 'foo'
    produces channel 'bar'
  }
  // #Reservation
}
// #everything
