// #everything
// #domains
domain ReactiveBBQ {
// #domains

  // Create some types with better names than just "Id"
  type CustomerId is Id explained as {
    "Unique identifier for a customer"
  }
  type OrderId is Id explained as {
    "Unique identifier for an customer's order"
  }

  // #Kitchen
  // The Kitchen context pertains to
  context Kitchen {
    type OrderViewType is combine {
      address is IPAddress
    }
    entity OrderViewer is OrderViewType {
      option is device
    }
  } explained as {
  }
  // #Kitchen

  // #Loyalty
  context Loyalty {
    type AccrualEvent is combine {
      when is TimeStamp,
      who is CustomerId,
      pointsAccrued is Number,
      fromOrder is OrderId
    }
    type AwardEvent is combine {
      when is TimeStamp,
      who is CustomerId,
      pointsAwarded is Number,
      toOrder is OrderId
    }
    type RewardEvent is choose AccrualEvent or AwardEvent
    type RewardsAccountType is combine {
      id is CustomerId,
      points is Number,
      rewardEvents is RewardEvent*
    }
    entity RewardsAccount is RewardsAccountType {
    }
  }
  // #Loyalty

  // #Order
  context Order {
    type OrderType is combine {
      orderId is Id,
      customerId is Id
    }
    entity Order is OrderType {
      option is aggregate
    }
  }
  // #Order

  // #Payment
  context Payment {
    type PaymentType is combine {
      orderId is Id,
      amount is Number,
      cardToken is String
    }
    entity Payment is PaymentType {
      option is aggregate
    }
  }
  // #Payment

  // #Menu
  context Menu {
    entity MenuItem is String {
    }
    entity Menu is MenuItem+ {
      option is aggregate
    }
  }
  // #Menu

  // #Reservation
  context Reservation {
    type ReservationValue is combine {
      partyName is String,
      phoneNumber is String,
      location is Id,
      time is Time,
      date is Date
    }

    entity Reservation is ReservationValue {
      consumes channel foo
      produces channel bar
    }
  }
  // #Reservation
} explained as {
  "# Reactive BBQ Domain Definition"
  "This domain definition is designed to be instructive in the RIDDL language."
  "It uses the case study from the Lightbend Reactive Architecture course as"
  "the basis for defining the domain. The course uses a set of interviews with"
  "Reactive BBQ employees to define the requirements. This domain specification"
  "is a possible result of analyzing that domain: the Reactive BBQ restaurant."
}
// #everything
